{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0","program":"/home/nico/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","numtoa","/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=61af60c0226752bb","-C","extra-filename=-61af60c0226752bb","--out-dir","/mnt/c/Users/user/Desktop/rusty/termion_ext_tests/termion_ext/target/rls/debug/deps","-L","dependency=/mnt/c/Users/user/Desktop/rusty/termion_ext_tests/termion_ext/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/nico/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/mnt/c/Users/user/Desktop/rusty/termion_ext_tests/termion_ext/target/rls/debug/deps/libnumtoa-61af60c0226752bb.rmeta"},"prelude":{"crate_id":{"name":"numtoa","disambiguator":[16634076744890598471,3802385210961726128]},"crate_root":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src","external_crates":[{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5273437404553270099,5411348343046199890]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[976218546544352998,2134245565175613459]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[13100362557277821204,18082047403827332368]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[14071373652398347879,7103549041170480253]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3605767859335716447,18368004652892255649]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7644919710974821109,7113146966867899407]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16182386318199163571,1953714320961812]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12664401352052491985,6928826529401171483]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17274879524252775070,15165904048009513825]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3349673540409454496,14630436784565510244]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14546748579478228105,1074460191194833292]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5671097699487010686,7534711367382902334]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7229860330014108182,6606161976056509340]}},{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7609715969379266585,5596137465280250730]}}],"span":{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":0,"byte_end":18115,"line_start":1,"line_end":540,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":0,"byte_end":18115,"line_start":1,"line_end":540,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":26},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":18},{"krate":0,"index":22}],"decl_id":null,"docs":" The standard library provides a convenient method of converting numbers into strings, but these strings are\n heap-allocated. If you have an application which needs to convert large volumes of numbers into strings, but don't\n want to pay the price of heap allocation, this crate provides an efficient `no_std`-compatible method of heaplessly converting numbers\n into their string representations, storing the representation within a reusable byte array.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3076,"byte_end":3086,"line_start":84,"line_end":84,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":3305,"byte_end":3311,"line_start":93,"line_end":93,"column_start":11,"column_end":17},"name":"NumToA","qualname":"::NumToA","value":"NumToA<T>","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" Converts a number into a string representation, storing the conversion into a mutable byte slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4328,"byte_end":4334,"line_start":117,"line_end":117,"column_start":8,"column_end":14},"name":"numtoa","qualname":"::NumToA::numtoa","value":"fn (self, base: T, string: &mut [u8]) -> usize","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Given a base for encoding and a mutable byte slice, write the number into the byte slice and return the\n indice where the inner string begins. The inner string can be extracted by slicing the byte slice from\n that indice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4502,"byte_end":4512,"line_start":121,"line_end":121,"column_start":8,"column_end":18},"name":"numtoa_str","qualname":"::NumToA::numtoa_str","value":"fn (self, base: T, buf: &mut [u8; 20]) -> &str","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Convenience method for quickly getting a string from the input's array buffer.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/nico/.cargo/registry/src/github.com-1ecc6299db9ec823/numtoa-0.1.0/src/lib.rs","byte_start":4384,"byte_end":4407,"line_start":119,"line_end":119,"column_start":5,"column_end":28}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}